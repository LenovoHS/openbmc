diff -Naur a/drivers/hwmon/pmbus/ir38164.c b/drivers/hwmon/pmbus/ir38164.c
--- a/drivers/hwmon/pmbus/ir38164.c	1970-01-01 08:00:00.000000000 +0800
+++ b/drivers/hwmon/pmbus/ir38164.c	2019-09-04 16:52:36.261227604 +0800
@@ -0,0 +1,63 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Hardware monitoring driver for Infineon ir38164
+ *
+ * Copyright (c) 2017 Google Inc
+ *
+ * VOUT_MODE is not supported by the device. The driver fakes VOUT linear16
+ * mode with exponent value -8 as direct mode with m=256/b=0/R=0.
+ *          
+ * The device supports VOUT_PEAK, IOUT_PEAK, and TEMPERATURE_PEAK, however
+ * this driver does not currently support them.
+ */
+
+#include <linux/err.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include "pmbus.h"
+
+static struct pmbus_driver_info ir38164_info = {
+	.pages = 1,
+	.format[PSC_VOLTAGE_IN] = linear,
+	.format[PSC_VOLTAGE_OUT] = linear,
+	.format[PSC_CURRENT_OUT] = linear,
+	.format[PSC_POWER] = linear,
+	.format[PSC_TEMPERATURE] = linear,
+
+	.func[0] = PMBUS_HAVE_VIN | PMBUS_HAVE_STATUS_INPUT
+	    | PMBUS_HAVE_TEMP | PMBUS_HAVE_STATUS_TEMP
+	    | PMBUS_HAVE_VOUT | PMBUS_HAVE_STATUS_VOUT
+	    | PMBUS_HAVE_IOUT | PMBUS_HAVE_STATUS_IOUT
+	    | PMBUS_HAVE_POUT,
+};
+
+static int ir38164_probe(struct i2c_client *client,
+			 const struct i2c_device_id *id)
+{
+	return pmbus_do_probe(client, id, &ir38164_info);
+}
+
+static const struct i2c_device_id ir38164_id[] = {
+	{"ir38164", 0},
+	{}
+};
+
+MODULE_DEVICE_TABLE(i2c, ir38164_id);
+
+/* This is the driver that will be inserted */
+static struct i2c_driver ir38164_driver = {
+	.driver = {
+		   .name = "ir38164",
+		   },
+	.probe = ir38164_probe,
+	.remove = pmbus_do_remove,
+	.id_table = ir38164_id,
+};
+
+module_i2c_driver(ir38164_driver);
+
+MODULE_AUTHOR("Maxim Sloyko <maxims@google.com>");
+MODULE_DESCRIPTION("PMBus driver for Infineon ir38164");
+MODULE_LICENSE("GPL");
\ No newline at end of file
diff -Naur a/drivers/hwmon/pmbus/Kconfig b/drivers/hwmon/pmbus/Kconfig
--- a/drivers/hwmon/pmbus/Kconfig	2019-09-04 16:14:26.102345094 +0800
+++ b/drivers/hwmon/pmbus/Kconfig	2019-09-04 16:53:16.584250698 +0800
@@ -64,6 +64,15 @@
 	  This driver can also be built as a module. If so, the module will
 	  be called ir38064.
 
+config SENSORS_IR38164
+	tristate "Infineon IR38164"
+	help
+	  If you say yes here you get hardware monitoring support for Infineon
+	  IR38164.
+
+	  This driver can also be built as a module. If so, the module will
+	  be called ir38164.
+	  
 config SENSORS_ISL68137
 	tristate "Intersil ISL68137"
 	help
diff -Naur a/drivers/hwmon/pmbus/Makefile b/drivers/hwmon/pmbus/Makefile
--- a/drivers/hwmon/pmbus/Makefile	2019-09-04 16:14:26.102345094 +0800
+++ b/drivers/hwmon/pmbus/Makefile	2019-09-04 16:55:30.710193082 +0800
@@ -9,6 +9,7 @@
 obj-$(CONFIG_SENSORS_IBM_CFFPS)	+= ibm-cffps.o
 obj-$(CONFIG_SENSORS_IR35221)	+= ir35221.o
 obj-$(CONFIG_SENSORS_IR38064)	+= ir38064.o
+obj-$(CONFIG_SENSORS_IR38064)	+= ir38164.o
 obj-$(CONFIG_SENSORS_ISL68137)	+= isl68137.o
 obj-$(CONFIG_SENSORS_LM25066)	+= lm25066.o
 obj-$(CONFIG_SENSORS_LTC2978)	+= ltc2978.o
