diff -Naur a/src/FruDevice.cpp b/src/FruDevice.cpp
--- a/src/FruDevice.cpp	2019-04-24 10:35:24.907540399 +0800
+++ b/src/FruDevice.cpp	2019-04-26 18:15:45.055981567 +0800
@@ -39,7 +39,7 @@
 }
 
 namespace fs = std::filesystem;
-static constexpr bool DEBUG = false;
+static constexpr bool DEBUG = true;
 static size_t UNKNOWN_BUS_OBJECT_COUNT = 0;
 constexpr size_t MAX_FRU_SIZE = 512;
 constexpr size_t MAX_EEPROM_PAGE_INDEX = 255;
@@ -68,7 +68,8 @@
 static int isDevice16Bit(int file)
 {
     /* Get first byte */
-    int byte1 = i2c_smbus_read_byte_data(file, 0);
+    int byte1 = i2c_smbus_read_byte(file);
+	
     if (byte1 < 0)
     {
         return byte1;
@@ -78,7 +79,8 @@
      */
     for (int i = 0; i < 7; i++)
     {
-        int byte2 = i2c_smbus_read_byte_data(file, 0);
+        int byte2 = i2c_smbus_read_byte(file);
+		
         if (byte2 < 0)
         {
             return byte2;
@@ -96,7 +98,15 @@
 {
     uint8_t low_addr = offset & 0xFF;
     uint8_t high_addr = (offset >> 8) & 0xFF;
+	uint32_t ii;
 
+	i2c_smbus_write_byte_data(file, 0, low_addr);
+	
+	for (ii=0; ii < len; ii++) {
+		buf[ii] = i2c_smbus_read_byte(file);
+	}
+	return ii;
+	
     if (flag == 0)
     {
         return i2c_smbus_read_i2c_block_data(file, low_addr, len, buf);
@@ -105,6 +115,7 @@
     /* This is for 16 bit addressing EEPROM device. First an offset
      * needs to be written before read data from a offset
      */
+
     int ret = i2c_smbus_write_byte_data(file, 0, low_addr);
     if (ret < 0)
     {
